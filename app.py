import streamlit as st
import pandas as pd
import time  # Import the time module
from Transformer_Final_Project import RAGPipeline  # Import your RAGPipeline

# Initialize RAG Pipeline
rag_pipeline = RAGPipeline(k=2)

# Streamlit App Configuration
st.set_page_config(page_title="Travel Chatbot", page_icon="ðŸ§³", layout="centered")

# Streamlit App Title with Logo
st.image("Logo.webp", use_column_width=True)  # Adjust path if logo is in a subdirectory
st.write('Logo is generated by ChatGPT')
st.title("Travel Chatbot: Explore Your Next Destination")

# Initialize a list to store Q&A for session state
if "chat_log" not in st.session_state:
    st.session_state["chat_log"] = []

# User Input Section
st.subheader("Ask a Question About Travel Destinations")
user_question = st.text_input("Type your question below:")

if st.button("Submit") and user_question.strip():
    st.write("Processing your question...")

    # Add a delay of 10 seconds to simulate processing time
    time.sleep(10)

    try:
        # Run the RAG pipeline
        result = rag_pipeline(question=user_question)

        # Display the generated answer
        st.subheader("Answer")
        st.write(result.answer)

        # Display the retrieved context
        st.subheader("Retrieved Contexts")
        for idx, context in enumerate(result.context, start=1):
            st.write(f"Context {idx}: {context}")

        # Append Q&A to the chat log
        st.session_state["chat_log"].append({
            "Question": user_question,
            "Generated Answer": result.answer,
            "Retrieved Context": "\n\n".join(result.context)
        })
    except Exception as e:
        st.error(f"An error occurred: {e}")

# Option to save the chat log
if st.button("Save Chat Log"):
    if st.session_state["chat_log"]:
        chat_log_df = pd.DataFrame(st.session_state["chat_log"])
        chat_log_df.to_csv("chat_log.csv", index=False)
        st.success("Chat log saved successfully!")
    else:
        st.warning("Chat log is empty. Nothing to save.")

# Clear the chat log
if st.button("Clear Chat Log"):
    st.session_state["chat_log"] = []
    st.info("Chat log cleared!")

# Display Chat Log
if st.session_state["chat_log"]:
    st.subheader("Chat Log")
    for entry in st.session_state["chat_log"]:
        st.write(f"**Q:** {entry['Question']}")
        st.write(f"**A:** {entry['Generated Answer']}")
        st.markdown("---")

# Footer
st.markdown("---")
st.markdown("Powered by **Travel Chatbot** | Built with Streamlit ðŸš€")
